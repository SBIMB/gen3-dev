apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    meta.helm.sh/release-name: gen3-dev
    meta.helm.sh/release-namespace: default
  creationTimestamp: "2023-12-11T21:35:12Z"
  generation: 1
  labels:
    app: peregrine
    app.kubernetes.io/instance: gen3-dev
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: peregrine
    app.kubernetes.io/part-of: Core-Service
    app.kubernetes.io/version: 0.1.10
    critical-service: "true"
    release: production
  name: peregrine-deployment
  namespace: default
  resourceVersion: "257991"
  uid: 17dddb8c-3bc7-4423-b815-730ce1e80ef2
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: peregrine
      app.kubernetes.io/instance: gen3-dev
      app.kubernetes.io/name: peregrine
      release: production
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: peregrine
        app.kubernetes.io/instance: gen3-dev
        app.kubernetes.io/name: peregrine
        release: production
    spec:
      containers:
      - env:
        - name: FENCE_DB_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: fence-dbcreds
              optional: false
        - name: FENCE_DB_PASS
          valueFrom:
            secretKeyRef:
              key: password
              name: fence-dbcreds
              optional: false
        - name: FENCE_DB_HOST
          valueFrom:
            secretKeyRef:
              key: host
              name: fence-dbcreds
              optional: false
        - name: FENCE_DB_DBNAME
          valueFrom:
            secretKeyRef:
              key: database
              name: fence-dbcreds
              optional: false
        - name: DBREADY_FENCE
          valueFrom:
            secretKeyRef:
              key: dbcreated
              name: fence-dbcreds
              optional: false
        - name: FLASK_SECRET_KEY
          value: 'TODO: FIX THIS!!!'
        - name: PGHOST
          valueFrom:
            secretKeyRef:
              key: host
              name: sheepdog-dbcreds
              optional: false
        - name: PGUSER
          valueFrom:
            secretKeyRef:
              key: username
              name: sheepdog-dbcreds
              optional: false
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: sheepdog-dbcreds
              optional: false
        - name: PGDB
          valueFrom:
            secretKeyRef:
              key: database
              name: sheepdog-dbcreds
              optional: false
        - name: DBREADY
          valueFrom:
            secretKeyRef:
              key: dbcreated
              name: sheepdog-dbcreds
              optional: false
        - name: GEN3_UWSGI_TIMEOUT
          value: "600"
        - name: DICTIONARY_URL
          valueFrom:
            configMapKeyRef:
              key: dictionary_url
              name: manifest-global
              optional: true
        - name: PUBLIC_DATASETS
          valueFrom:
            configMapKeyRef:
              key: public_datasets
              name: manifest-global
              optional: true
        - name: INDEX_CLIENT_HOST
          valueFrom:
            configMapKeyRef:
              key: indexd_url
              name: manifest-global
              optional: true
        - name: GRAPHQL_TIMEOUT
          valueFrom:
            configMapKeyRef:
              key: peregrine_timeout
              name: manifest-peregrine
              optional: true
        - name: FENCE_URL
          valueFrom:
            configMapKeyRef:
              key: fence_url
              name: manifest-global
              optional: true
        - name: ARBORIST_URL
        - name: GEN3_SIDECAR
          value: "False"
        - name: CONF_HOSTNAME
          value: cloud08
        image: quay.io/cdis/peregrine:2023.01
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /_status?timeout=20
            port: http
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 30
        name: peregrine
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /_status?timeout=2
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: "1"
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 12Mi
        securityContext: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/www/peregrine/wsgi.py
          name: config-volume
          readOnly: true
          subPath: settings.py
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: gen3-dev-peregrine
      serviceAccountName: gen3-dev-peregrine
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: shared-data
      - name: config-volume
        secret:
          defaultMode: 420
          secretName: peregrine-secret
