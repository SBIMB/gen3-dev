# Deploys a new Namespace for the MinIO Pod
apiVersion: v1
kind: Namespace
metadata:
  name: minio-system
  labels:
    name: minio-system
---
# Deploys a new MinIO Pod into the metadata.namespace Kubernetes namespace
#
# The `spec.containers[0].args` contains the command run on the pod
# The `/data` directory corresponds to the `spec.containers[0].volumeMounts[0].mountPath`
# That mount path corresponds to a Kubernetes HostPath which binds `/data` to a local drive or volume on the worker node where the pod runs
# 
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio-deployment
  namespace: minio-system
spec:
  selector:
    matchLabels:
      app: minio
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: minio
    spec:
      nodeSelector:
        kubernetes.io/hostname: cloud08
      volumes:
      - name: gen3-volume
        # persistentVolumeClaim:
        #   claimName: longhorn-gen3-pvc
        hostPath: # MinIO generally recommends using locally-attached volumes
          path: /$HOME/workspace/gen3-volume # Specify a path to a local drive or volume on the Kubernetes worker node
          type: DirectoryOrCreate # The path to the last directory must exist
      containers:
      - name: minio
        image: quay.io/minio/minio:latest
        args:
        - minio server /data --console-address :9090
        command:
        - /bin/bash
        - -c
        env:
        - name: BASE_HREF
          value: /minio/
        - name: MINIO_ACCESS_KEY
          value: "minio"
        - name: MINIO_SECRET_KEY
          value: "minio123"
        ports:
        - containerPort: 9000
          hostPort: 9000
        - containerPort: 9090
          hostPort: 9090
        volumeMounts:
        - mountPath: /data
          name: gen3-volume # Corresponds to the `spec.volumes` Persistent Volume
---
apiVersion: v1
kind: Service
metadata:
  name: minio-service
  namespace: minio-system
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 9000
    protocol: TCP
  selector:
    app: minio
